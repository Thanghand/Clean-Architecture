
version: '3.0'
services:
  mongodb:
    image: mongo:4.4.1
    container_name: mongodb
    restart: always
    networks:
      - app-network
    expose:
      - 27017
    ports:
      - "27017:27017"
    volumes:
      - "mongodb-data:/data/db"

  # mysql:
  #   platform: linux/x86_64
  #   container_name: mysql
  #   image: mysql:5.7
  #   ports:
  #     - 3306:3306
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: product-catalog-db
  #     MYSQL_USER: admin
  #     MYSQL_PASSWORD: password
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   networks:
  #     - app-network

  dynamodb:
    container_name: dynamodb
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory"]
  
  api-product-catalog:
    image: api-product-catalog
    container_name: api-product-catalog
    build:
      context: ./services/product-catalog
      dockerfile: Dockerfile
      args:
        - app=api-product-catalog
    depends_on:
      - mongodb
      - mysql
      - dynamodb
    ports:
      - 3000:3000
      - 6000:9000
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge
    
volumes:
  mongodb-data:
    name: local-mongdb-data
    driver: local
  mysql_data:
    name: mysql_data